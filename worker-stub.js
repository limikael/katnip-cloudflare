export default `

//
// This file is automatically generated.
//
// Don't edit this file, and don't put it under version control!
//

import {KatnipServer} from "katnip";

$$WORKER_DATA$$

let serverMap=new Map();
function getEnvServer(env) {
	if (!serverMap.get(env)) {
		let envConf={...workerData.env,...env};
		serverMap.set(env,new KatnipServer({
			modules: workerData.modules,
			importModules: workerData.importModules,
			env: envConf
		}));
	}

	return serverMap.get(env);
}

export default {
	async fetch(request, env, ctx) {
		if (env.ASSETS && env.ASSETS.fetch) {
	    	const res = await env.ASSETS.fetch(request);
	    	if (res && res.status!=404) {
	    		return res;
	    	}
		}

		let server=getEnvServer(env);
		return await server.handleRequest({request,ctx});
	},

	async scheduled(controller, env, ctx) {
		let server=getEnvServer(env);
		return await server.handleScheduled({cron: controller.cron, ctx});
	},
}
`;
